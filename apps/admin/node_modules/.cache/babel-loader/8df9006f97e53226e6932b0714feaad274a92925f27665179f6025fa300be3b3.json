{"ast":null,"code":"import { parseExcel, isExcel } from './utility';\nimport { ref } from 'vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'index',\n  emits: ['complete'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose({\n      reset\n    });\n    const isComplete = ref(false);\n    const isLoading = ref(false);\n    const emit = __emit;\n    const fileIist = ref([]);\n    async function beforeUpload(file) {\n      if (isExcel(file)) {\n        isLoading.value = true;\n        fileIist.value = [file];\n        const data = await parseExcel(file);\n        emit('complete', data);\n        isComplete.value = true;\n        isLoading.value = false;\n        return true;\n      } else {\n        ElMessage.warning(this.$t('UploadExcel.index.017837-4'));\n        return false;\n      }\n    }\n    function reset() {\n      fileIist.value = [];\n      isComplete.value = false;\n    }\n    const __returned__ = {\n      isComplete,\n      isLoading,\n      emit,\n      fileIist,\n      beforeUpload,\n      reset,\n      get parseExcel() {\n        return parseExcel;\n      },\n      get isExcel() {\n        return isExcel;\n      },\n      ref,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["parseExcel","isExcel","ref","ElMessage","__expose","reset","isComplete","isLoading","emit","__emit","fileIist","beforeUpload","file","value","data","warning","$t"],"sources":["D:/myproject/毕业设计/pet-mall/apps/admin/src/components/UploadExcel/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload\">\r\n    <el-upload\r\n      accept=\".xlsx, .xls, .csv\"\r\n      drag\r\n      action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\"\r\n      :before-upload=\"beforeUpload\"\r\n      :http-request=\"() => false\"\r\n      :file-list=\"fileIist\"\r\n    >\r\n      <template #default>\r\n        <el-icon class=\"el-icon--upload\" v-if=\"isComplete\" color=\" #95d475\">\r\n          <SuccessFilled />\r\n        </el-icon>\r\n        <el-icon class=\"el-icon--upload is-loading\" v-else-if=\"isLoading\">\r\n          <Loading />\r\n        </el-icon>\r\n        <el-icon class=\"el-icon--upload\" v-else>\r\n          <upload-filled />\r\n        </el-icon>\r\n        <div class=\"el-upload__text\">{{ $t('UploadExcel.index.017837-0') }} <em>{{ $t('UploadExcel.index.017837-1') }}</em></div>\r\n      </template>\r\n      <template #file=\"data\">\r\n        <el-card shadow=\"never\">\r\n          <div>\r\n            <el-text type=\"success\">{{ $t('UploadExcel.index.017837-2') }}&nbsp;{{ data.file.name }}</el-text>\r\n          </div>\r\n          <div>\r\n            <el-text type=\"success\"\r\n              >{{ $t('UploadExcel.index.017837-3') }}&nbsp;{{ parseInt(data.file.size / 1024) }}kb</el-text\r\n            >\r\n          </div>\r\n        </el-card>\r\n      </template>\r\n      <template #tip>\r\n        <div class=\"el-upload__tip\">{{ $t('UploadExcel.index.017837-4') }}</div>\r\n      </template>\r\n    </el-upload>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { parseExcel, isExcel } from './utility'\r\nimport { defineEmits, ref, defineExpose } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\ndefineExpose({\r\n  reset\r\n})\r\nconst isComplete = ref(false)\r\nconst isLoading = ref(false)\r\nconst emit = defineEmits(['complete'])\r\nconst fileIist = ref([])\r\n\r\nasync function beforeUpload(file) {\r\n  if (isExcel(file)) {\r\n    isLoading.value = true\r\n    fileIist.value = [file]\r\n    const data = await parseExcel(file)\r\n    emit('complete', data)\r\n    isComplete.value = true\r\n    isLoading.value = false\r\n    return true\r\n  } else {\r\n    ElMessage.warning(this.$t('UploadExcel.index.017837-4'))\r\n    return false\r\n  }\r\n}\r\n\r\nfunction reset() {\r\n  fileIist.value = []\r\n  isComplete.value = false\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"],"mappings":"AA0CA,SAASA,UAAU,EAAEC,OAAO,QAAQ,WAAW;AAC/C,SAAsBC,GAAiB,QAAQ,KAAK;AACpD,SAASC,SAAS,QAAQ,cAAc;;;;;;;;IACxCC,QAAY,CAAC;MACXC;IACF,CAAC,CAAC;IACF,MAAMC,UAAU,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAMK,SAAS,GAAGL,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMM,IAAI,GAAGC,MAAyB;IACtC,MAAMC,QAAQ,GAAGR,GAAG,CAAC,EAAE,CAAC;IAExB,eAAeS,YAAYA,CAACC,IAAI,EAAE;MAChC,IAAIX,OAAO,CAACW,IAAI,CAAC,EAAE;QACjBL,SAAS,CAACM,KAAK,GAAG,IAAI;QACtBH,QAAQ,CAACG,KAAK,GAAG,CAACD,IAAI,CAAC;QACvB,MAAME,IAAI,GAAG,MAAMd,UAAU,CAACY,IAAI,CAAC;QACnCJ,IAAI,CAAC,UAAU,EAAEM,IAAI,CAAC;QACtBR,UAAU,CAACO,KAAK,GAAG,IAAI;QACvBN,SAAS,CAACM,KAAK,GAAG,KAAK;QACvB,OAAO,IAAI;MACb,CAAC,MAAM;QACLV,SAAS,CAACY,OAAO,CAAC,IAAI,CAACC,EAAE,CAAC,4BAA4B,CAAC,CAAC;QACxD,OAAO,KAAK;MACd;IACF;IAEA,SAASX,KAAKA,CAAA,EAAG;MACfK,QAAQ,CAACG,KAAK,GAAG,EAAE;MACnBP,UAAU,CAACO,KAAK,GAAG,KAAK;IAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}