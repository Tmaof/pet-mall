{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { useStore } from 'vuex';\nimport { computed, ref, onMounted, watch } from 'vue';\nimport { getRoleList } from '@/api/role-manage';\nimport { getUserRole, assignRolesToUser } from '@/api/user-manage';\nexport default {\n  __name: 'index',\n  props: {\n    modelValue: {\n      required: true,\n      defualt: false\n    },\n    userId: {\n      required: true\n    }\n  },\n  emits: ['update:modelValue', 'complete'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const {\n      getters\n    } = useStore();\n    const props = __props;\n    const beReady = ref(false);\n    const isShow = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(val) {\n        emit('update:modelValue', val);\n      }\n    });\n    const emit = __emit;\n    const roleList = ref([]);\n    const userRoleList = ref([]);\n    const selectedRolesList = ref([]);\n    const showRoleList = ref([]);\n    watch(props, async props => {\n      if (props.modelValue) {\n        await getRoleListInfo();\n        await getUserRoleListInfo();\n        getShowRoleList();\n        beReady.value = true;\n      }\n    });\n    async function getRoleListInfo() {\n      roleList.value = await getRoleList();\n    }\n    async function getUserRoleListInfo() {\n      const {\n        role\n      } = await getUserRole(props.userId);\n      userRoleList.value = role.map(item => {\n        item.checked = true;\n        return item;\n      });\n    }\n    function getShowRoleList() {\n      showRoleList.value = [];\n      for (const item of roleList.value) {\n        const index = userRoleList.value.findIndex(role => role.id === item.id);\n        if (index !== -1) {\n          showRoleList.value.push(userRoleList.value[index]);\n        } else {\n          showRoleList.value.push(item);\n        }\n      }\n    }\n    async function assignRoles() {\n      selectedRolesList.value.forEach(item => delete item.checked);\n      await assignRolesToUser(props.userId, selectedRolesList.value).then(() => {\n        isShow.value = false;\n        emit('complete');\n      });\n    }\n    function resetInfo() {\n      userRoleList.value = [];\n      roleList.value = [];\n      showRoleList.value = [];\n      selectedRolesList.value = [];\n      beReady.value = false;\n    }\n    onMounted(() => {});\n    const __returned__ = {\n      getters,\n      props,\n      beReady,\n      isShow,\n      emit,\n      roleList,\n      userRoleList,\n      selectedRolesList,\n      showRoleList,\n      getRoleListInfo,\n      getUserRoleListInfo,\n      getShowRoleList,\n      assignRoles,\n      resetInfo,\n      get useStore() {\n        return useStore;\n      },\n      computed,\n      ref,\n      onMounted,\n      watch,\n      get getRoleList() {\n        return getRoleList;\n      },\n      get getUserRole() {\n        return getUserRole;\n      },\n      get assignRolesToUser() {\n        return assignRolesToUser;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useStore","computed","ref","onMounted","watch","getRoleList","getUserRole","assignRolesToUser","getters","props","__props","beReady","isShow","get","modelValue","set","val","emit","__emit","roleList","userRoleList","selectedRolesList","showRoleList","getRoleListInfo","getUserRoleListInfo","getShowRoleList","value","role","userId","map","item","checked","index","findIndex","id","push","assignRoles","forEach","then","resetInfo"],"sources":["D:/myproject/毕业设计/pet-mall/apps/admin/src/views/Acl/User/components/AssignRoles/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      v-model=\"isShow\"\r\n      :fullscreen=\"getters.isMobile\"\r\n      :title=\"$t('AssignRoles.index.017835-0')\"\r\n      @closed=\"resetInfo\"\r\n    >\r\n      <div v-if=\"beReady\">\r\n        <el-checkbox-group v-model=\"selectedRolesList\">\r\n          <el-checkbox\r\n            v-for=\"(role, i) of showRoleList\"\r\n            :key=\"i\"\r\n            :label=\"role\"\r\n            :checked=\"role.checked\"\r\n            >{{ role.name }}</el-checkbox\r\n          >\r\n        </el-checkbox-group>\r\n        <div class=\"right-btn-container\">\r\n          <el-button type=\"primary\" @click=\"assignRoles\">{{ $t('AssignRoles.index.017835-1') }}</el-button>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"loading-container\">\r\n        <el-icon :size=\"20\" class=\"is-loading\"><Loading /></el-icon>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from 'vuex'\r\nimport { defineEmits, defineProps, computed, ref, onMounted, watch } from 'vue'\r\nimport { getRoleList } from '@/api/role-manage'\r\nimport { getUserRole, assignRolesToUser } from '@/api/user-manage'\r\nconst { getters } = useStore()\r\nconst props = defineProps({\r\n  modelValue: {\r\n    required: true,\r\n    defualt: false\r\n  },\r\n  userId: {\r\n    required: true\r\n  }\r\n})\r\nconst beReady = ref(false)\r\nconst isShow = computed({\r\n  get() {\r\n    return props.modelValue\r\n  },\r\n  set(val) {\r\n    emit('update:modelValue', val)\r\n  }\r\n})\r\nconst emit = defineEmits(['update:modelValue', 'complete'])\r\nconst roleList = ref([])\r\nconst userRoleList = ref([])\r\nconst selectedRolesList = ref([])\r\nconst showRoleList = ref([])\r\n\r\nwatch(props, async (props) => {\r\n  if (props.modelValue) {\r\n    await getRoleListInfo()\r\n    await getUserRoleListInfo()\r\n    getShowRoleList()\r\n    beReady.value = true\r\n  }\r\n})\r\n\r\nasync function getRoleListInfo() {\r\n  roleList.value = await getRoleList()\r\n}\r\nasync function getUserRoleListInfo() {\r\n  const { role } = await getUserRole(props.userId)\r\n  userRoleList.value = role.map((item) => {\r\n    item.checked = true\r\n    return item\r\n  })\r\n}\r\nfunction getShowRoleList() {\r\n  showRoleList.value = []\r\n  for (const item of roleList.value) {\r\n    const index = userRoleList.value.findIndex((role) => role.id === item.id)\r\n    if (index !== -1) {\r\n      showRoleList.value.push(userRoleList.value[index])\r\n    } else {\r\n      showRoleList.value.push(item)\r\n    }\r\n  }\r\n}\r\nasync function assignRoles() {\r\n  selectedRolesList.value.forEach((item) => delete item.checked)\r\n  await assignRolesToUser(props.userId, selectedRolesList.value).then(() => {\r\n    isShow.value = false\r\n    emit('complete')\r\n  })\r\n}\r\n\r\nfunction resetInfo() {\r\n  userRoleList.value = []\r\n  roleList.value = []\r\n  showRoleList.value = []\r\n  selectedRolesList.value = []\r\n  beReady.value = false\r\n}\r\nonMounted(() => {})\r\n</script>\r\n\r\n<style scoped>\r\n.right-btn-container {\r\n  display: flex;\r\n  justify-content: right;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}