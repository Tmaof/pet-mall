{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  return _openBlock(), _createBlock(_component_el_breadcrumb, {\n    separator: $setup.props.separator\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.infoList, route => {\n      return _openBlock(), _createBlock(_component_el_breadcrumb_item, {\n        key: route.path,\n        to: {\n          path: route.path\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(route.meta.title), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"separator\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_breadcrumb","separator","$setup","props","default","_withCtx","_createElementBlock","_Fragment","_renderList","infoList","route","_component_el_breadcrumb_item","key","path","to","_createTextVNode","_toDisplayString","meta","title","_"],"sources":["D:\\myproject\\毕业设计\\pet-mall\\apps\\admin\\src\\components\\Breadcrumb\\index.vue"],"sourcesContent":["<template>\r\n  <el-breadcrumb :separator=\"props.separator\">\r\n    <el-breadcrumb-item\r\n      v-for=\"route of infoList\"\r\n      :key=\"route.path\"\r\n      :to=\"{ path: route.path }\"\r\n      >{{ route.meta.title }}</el-breadcrumb-item\r\n    >\r\n  </el-breadcrumb>\r\n</template>\r\n<script setup>\r\nimport { useRoute } from 'vue-router'\r\nimport { watch, reactive, defineProps } from 'vue'\r\nconst route = useRoute()\r\nconst infoList = reactive([])\r\nconst props = defineProps({\r\n  separator: {\r\n    type: String,\r\n    default: '/'\r\n  }\r\n})\r\nwatch(\r\n  route,\r\n  () => {\r\n    infoList.splice(0, infoList.length)\r\n    route.matched.forEach((value) => {\r\n      if (value.meta && value.meta.title) {\r\n        infoList.push(value)\r\n      }\r\n    })\r\n  },\r\n  { immediate: true }\r\n)\r\n</script>\r\n<style lang=\"\" scoped></style>\r\n"],"mappings":";;;;uBACEA,YAAA,CAOgBC,wBAAA;IAPAC,SAAS,EAAEC,MAAA,CAAAC,KAAK,CAACF;;IADnCG,OAAA,EAAAC,QAAA,CAGM,MAAyB,E,kBAD3BC,mBAAA,CAIoDC,SAAA,QANxDC,WAAA,CAGsBN,MAAA,CAAAO,QAAQ,EAAjBC,KAAK;2BADdX,YAAA,CAIoDY,6BAAA;QAFjDC,GAAG,EAAEF,KAAK,CAACG,IAAI;QACfC,EAAE;UAAAD,IAAA,EAAUH,KAAK,CAACG;QAAI;;QAL7BT,OAAA,EAAAC,QAAA,CAMO,MAAsB,CAN7BU,gBAAA,CAAAC,gBAAA,CAMUN,KAAK,CAACO,IAAI,CAACC,KAAK,iB;QAN1BC,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}