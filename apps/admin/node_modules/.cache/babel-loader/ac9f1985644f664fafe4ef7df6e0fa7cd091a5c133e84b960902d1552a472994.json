{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/* eslint-disable */\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx/xlsx.mjs';\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n      if (typeof cell.v === 'number') cell.t = 'n';else if (typeof cell.v === 'boolean') cell.t = 'b';else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n      ws[cell_ref] = cell;\n    }\n  }\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff;\n  return buf;\n}\nexport default function export_json_to_excel({\n  multiHeader = [],\n  header,\n  data,\n  filename,\n  merges = [],\n  autoWidth = true,\n  bookType = 'xlsx'\n} = {}) {\n  // 1. 设置文件名称\n  filename = filename || 'excel-list';\n  // 2. 把数据解析为数组，并把表头添加到数组的头部\n  data = [...data];\n  data.unshift(header);\n  // 3. 解析多表头，把多表头的数据添加到数组头部（二维数组）\n  for (let i = multiHeader.length - 1; i > -1; i--) {\n    data.unshift(multiHeader[i]);\n  }\n  // 4. 设置 Excel 表工作簿（第一张表格）名称\n  var ws_name = 'SheetJS';\n  // 5. 生成工作簿对象\n  var wb = new Workbook();\n  // 6. 将 data 数组（json格式）转化为 Excel 数据格式\n  var ws = sheet_from_array_of_arrays(data);\n  // 7. 合并单元格相关（['A1:A2', 'B1:D1', 'E1:E2']）\n  if (merges.length > 0) {\n    if (!ws['!merges']) ws['!merges'] = [];\n    merges.forEach(item => {\n      ws['!merges'].push(XLSX.utils.decode_range(item));\n    });\n  }\n  // 8. 单元格宽度相关\n  if (autoWidth) {\n    /*设置 worksheet 每列的最大宽度*/\n    const colWidth = data.map(row => row.map(val => {\n      /*先判断是否为null/undefined*/\n      if (val == null) {\n        return {\n          wch: 10\n        };\n      } else if (val.toString().charCodeAt(0) > 255) {\n        /*再判断是否为中文*/\n        return {\n          wch: val.toString().length * 2\n        };\n      } else {\n        return {\n          wch: val.toString().length\n        };\n      }\n    }));\n    /*以第一行为初始值*/\n    let result = colWidth[0];\n    for (let i = 1; i < colWidth.length; i++) {\n      for (let j = 0; j < colWidth[i].length; j++) {\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\n          result[j]['wch'] = colWidth[i][j]['wch'];\n        }\n      }\n    }\n    ws['!cols'] = result;\n  }\n\n  // 9. 添加工作表（解析后的 excel 数据）到工作簿\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n  // 10. 写入数据\n  var wbout = XLSX.write(wb, {\n    bookType: bookType,\n    bookSST: false,\n    type: 'binary'\n  });\n  // 11. 下载数据\n  saveAs(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }), `${filename}.${bookType}`);\n}","map":{"version":3,"names":["saveAs","XLSX","datenum","v","date1904","epoch","Date","parse","UTC","sheet_from_array_of_arrays","data","opts","ws","range","s","c","r","e","R","length","C","cell","cell_ref","utils","encode_cell","t","z","SSF","_table","encode_range","Workbook","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","export_json_to_excel","multiHeader","header","filename","merges","autoWidth","bookType","unshift","ws_name","wb","forEach","item","push","decode_range","colWidth","map","row","val","wch","toString","result","j","wbout","write","bookSST","type","Blob"],"sources":["D:/myproject/毕业设计/pet-mall/apps/admin/src/utility/export2Excel.js"],"sourcesContent":["/* eslint-disable */\r\nimport { saveAs } from 'file-saver'\r\nimport * as XLSX from 'xlsx/xlsx.mjs'\r\n\r\nfunction datenum(v, date1904) {\r\n  if (date1904) v += 1462\r\n  var epoch = Date.parse(v)\r\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000)\r\n}\r\n\r\nfunction sheet_from_array_of_arrays(data, opts) {\r\n  var ws = {}\r\n  var range = {\r\n    s: {\r\n      c: 10000000,\r\n      r: 10000000\r\n    },\r\n    e: {\r\n      c: 0,\r\n      r: 0\r\n    }\r\n  }\r\n  for (var R = 0; R != data.length; ++R) {\r\n    for (var C = 0; C != data[R].length; ++C) {\r\n      if (range.s.r > R) range.s.r = R\r\n      if (range.s.c > C) range.s.c = C\r\n      if (range.e.r < R) range.e.r = R\r\n      if (range.e.c < C) range.e.c = C\r\n      var cell = {\r\n        v: data[R][C]\r\n      }\r\n      if (cell.v == null) continue\r\n      var cell_ref = XLSX.utils.encode_cell({\r\n        c: C,\r\n        r: R\r\n      })\r\n\r\n      if (typeof cell.v === 'number') cell.t = 'n'\r\n      else if (typeof cell.v === 'boolean') cell.t = 'b'\r\n      else if (cell.v instanceof Date) {\r\n        cell.t = 'n'\r\n        cell.z = XLSX.SSF._table[14]\r\n        cell.v = datenum(cell.v)\r\n      } else cell.t = 's'\r\n\r\n      ws[cell_ref] = cell\r\n    }\r\n  }\r\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range)\r\n  return ws\r\n}\r\n\r\nfunction Workbook() {\r\n  if (!(this instanceof Workbook)) return new Workbook()\r\n  this.SheetNames = []\r\n  this.Sheets = {}\r\n}\r\n\r\nfunction s2ab(s) {\r\n  var buf = new ArrayBuffer(s.length)\r\n  var view = new Uint8Array(buf)\r\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff\r\n  return buf\r\n}\r\n\r\nexport default function export_json_to_excel({\r\n  multiHeader = [],\r\n  header,\r\n  data,\r\n  filename,\r\n  merges = [],\r\n  autoWidth = true,\r\n  bookType = 'xlsx'\r\n} = {}) {\r\n  // 1. 设置文件名称\r\n  filename = filename || 'excel-list'\r\n  // 2. 把数据解析为数组，并把表头添加到数组的头部\r\n  data = [...data]\r\n  data.unshift(header)\r\n  // 3. 解析多表头，把多表头的数据添加到数组头部（二维数组）\r\n  for (let i = multiHeader.length - 1; i > -1; i--) {\r\n    data.unshift(multiHeader[i])\r\n  }\r\n  // 4. 设置 Excel 表工作簿（第一张表格）名称\r\n  var ws_name = 'SheetJS'\r\n  // 5. 生成工作簿对象\r\n  var wb = new Workbook()\r\n  // 6. 将 data 数组（json格式）转化为 Excel 数据格式\r\n  var ws = sheet_from_array_of_arrays(data)\r\n  // 7. 合并单元格相关（['A1:A2', 'B1:D1', 'E1:E2']）\r\n  if (merges.length > 0) {\r\n    if (!ws['!merges']) ws['!merges'] = []\r\n    merges.forEach((item) => {\r\n      ws['!merges'].push(XLSX.utils.decode_range(item))\r\n    })\r\n  }\r\n  // 8. 单元格宽度相关\r\n  if (autoWidth) {\r\n    /*设置 worksheet 每列的最大宽度*/\r\n    const colWidth = data.map((row) =>\r\n      row.map((val) => {\r\n        /*先判断是否为null/undefined*/\r\n        if (val == null) {\r\n          return {\r\n            wch: 10\r\n          }\r\n        } else if (val.toString().charCodeAt(0) > 255) {\r\n          /*再判断是否为中文*/\r\n          return {\r\n            wch: val.toString().length * 2\r\n          }\r\n        } else {\r\n          return {\r\n            wch: val.toString().length\r\n          }\r\n        }\r\n      })\r\n    )\r\n    /*以第一行为初始值*/\r\n    let result = colWidth[0]\r\n    for (let i = 1; i < colWidth.length; i++) {\r\n      for (let j = 0; j < colWidth[i].length; j++) {\r\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\r\n          result[j]['wch'] = colWidth[i][j]['wch']\r\n        }\r\n      }\r\n    }\r\n    ws['!cols'] = result\r\n  }\r\n\r\n  // 9. 添加工作表（解析后的 excel 数据）到工作簿\r\n  wb.SheetNames.push(ws_name)\r\n  wb.Sheets[ws_name] = ws\r\n  // 10. 写入数据\r\n  var wbout = XLSX.write(wb, {\r\n    bookType: bookType,\r\n    bookSST: false,\r\n    type: 'binary'\r\n  })\r\n  // 11. 下载数据\r\n  saveAs(\r\n    new Blob([s2ab(wbout)], {\r\n      type: 'application/octet-stream'\r\n    }),\r\n    `${filename}.${bookType}`\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}