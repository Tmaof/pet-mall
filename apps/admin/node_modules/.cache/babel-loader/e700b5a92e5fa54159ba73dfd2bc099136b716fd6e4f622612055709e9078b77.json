{"ast":null,"code":"import { getRolePermission, assignPermission } from '@/api/role-manage';\nimport { ref, computed, watch } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'index',\n  props: {\n    modelValue: {\n      required: true,\n      type: Boolean\n    },\n    roleInfo: {\n      required: true,\n      type: Object\n    }\n  },\n  emits: ['update:modelValue', 'complete'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const {\n      getters\n    } = useStore();\n    const permList = ref([]);\n    const defaultCheckedIds = ref([]);\n    const props = __props;\n    const isShow = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(val) {\n        emit('update:modelValue', val);\n      }\n    });\n    const emit = __emit;\n    const elTreeProps = {\n      children: 'children',\n      label: 'name'\n    };\n    const elTreeRef = ref();\n    const isLoading = ref(true);\n    watch(props, async props => {\n      if (props.modelValue) {\n        isLoading.value = true;\n        await getPermListInfo(props.roleInfo.id);\n        isLoading.value = false;\n      }\n    });\n\n    /**\r\n     * 获取角色的权限\r\n     * @param {*} id\r\n     */\n    async function getPermListInfo(id) {\n      const info = await getRolePermission(id);\n      defaultCheckedIds.value = info.selected;\n      permList.value = info.list;\n    }\n    /**\r\n     * 分配权限\r\n     */\n    async function onAssignPerm() {\n      const list = elTreeRef.value.getCheckedKeys();\n      assignPermission({\n        roleId: props.roleInfo.id,\n        permissionIdList: list\n      }).then(() => {\n        isShow.value = false;\n        emit('complete');\n      });\n    }\n    function resetInfo() {\n      permList.value = [];\n      defaultCheckedIds.value = [];\n    }\n    const __returned__ = {\n      getters,\n      permList,\n      defaultCheckedIds,\n      props,\n      isShow,\n      emit,\n      elTreeProps,\n      elTreeRef,\n      isLoading,\n      getPermListInfo,\n      onAssignPerm,\n      resetInfo,\n      get getRolePermission() {\n        return getRolePermission;\n      },\n      get assignPermission() {\n        return assignPermission;\n      },\n      ref,\n      computed,\n      watch,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["getRolePermission","assignPermission","ref","computed","watch","useStore","getters","permList","defaultCheckedIds","props","__props","isShow","get","modelValue","set","val","emit","__emit","elTreeProps","children","label","elTreeRef","isLoading","value","getPermListInfo","roleInfo","id","info","selected","list","onAssignPerm","getCheckedKeys","roleId","permissionIdList","then","resetInfo"],"sources":["D:/myproject/毕业设计/pet-mall/apps/admin/src/views/Acl/Role/components/AssignPerm/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      :fullscreen=\"getters.isMobile\"\r\n      v-model=\"isShow\"\r\n      :title=\"$t('AssignPerm.index.017835-0', [props.roleInfo.name || '角色'])\"\r\n      @closed=\"resetInfo\"\r\n    >\r\n      <div v-if=\"!isLoading\">\r\n        <el-tree\r\n          :check-strictly=\"true\"\r\n          ref=\"elTreeRef\"\r\n          :data=\"permList\"\r\n          show-checkbox\r\n          node-key=\"id\"\r\n          highlight-current\r\n          :props=\"elTreeProps\"\r\n          :default-checked-keys=\"defaultCheckedIds\"\r\n          :default-expanded-keys=\"defaultCheckedIds\"\r\n        />\r\n        <div class=\"right-btn-container\">\r\n          <el-button type=\"primary\" @click=\"onAssignPerm\">{{ $t('AssignPerm.index.017835-1') }}</el-button>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"loading-container\">\r\n        <el-icon class=\"is-loading\" size=\"20\"><Loading /></el-icon>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { getRolePermission, assignPermission } from '@/api/role-manage'\r\nimport { ref, defineProps, computed, defineEmits, watch } from 'vue'\r\nimport { useStore } from 'vuex'\r\nconst { getters } = useStore()\r\nconst permList = ref([])\r\nconst defaultCheckedIds = ref([])\r\nconst props = defineProps({\r\n  modelValue: {\r\n    required: true,\r\n    type: Boolean\r\n  },\r\n  roleInfo: {\r\n    required: true,\r\n    type: Object\r\n  }\r\n})\r\n\r\nconst isShow = computed({\r\n  get() {\r\n    return props.modelValue\r\n  },\r\n  set(val) {\r\n    emit('update:modelValue', val)\r\n  }\r\n})\r\nconst emit = defineEmits(['update:modelValue', 'complete'])\r\nconst elTreeProps = {\r\n  children: 'children',\r\n  label: 'name'\r\n}\r\nconst elTreeRef = ref()\r\nconst isLoading = ref(true)\r\n\r\nwatch(props, async (props) => {\r\n  if (props.modelValue) {\r\n    isLoading.value = true\r\n    await getPermListInfo(props.roleInfo.id)\r\n    isLoading.value = false\r\n  }\r\n})\r\n\r\n/**\r\n * 获取角色的权限\r\n * @param {*} id\r\n */\r\nasync function getPermListInfo(id) {\r\n  const info = await getRolePermission(id)\r\n  defaultCheckedIds.value = info.selected\r\n  permList.value = info.list\r\n}\r\n/**\r\n * 分配权限\r\n */\r\nasync function onAssignPerm() {\r\n  const list = elTreeRef.value.getCheckedKeys()\r\n  assignPermission({ roleId: props.roleInfo.id, permissionIdList: list }).then(() => {\r\n    isShow.value = false\r\n    emit('complete')\r\n  })\r\n}\r\nfunction resetInfo() {\r\n  permList.value = []\r\n  defaultCheckedIds.value = []\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.right-btn-container {\r\n  display: flex;\r\n  justify-content: right;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"],"mappings":"AAgCA,SAASA,iBAAiB,EAAEC,gBAAgB,QAAQ,mBAAmB;AACvE,SAASC,GAAgB,EAAEC,QAAqB,EAAEC,KAAK,QAAQ,KAAK;AACpE,SAASC,QAAQ,QAAQ,MAAM;;;;;;;;;;;;;;;;;;;IAC/B,MAAM;MAAEC;IAAQ,CAAC,GAAGD,QAAQ,CAAC,CAAC;IAC9B,MAAME,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,iBAAiB,GAAGN,GAAG,CAAC,EAAE,CAAC;IACjC,MAAMO,KAAK,GAAGC,OASZ;IAEF,MAAMC,MAAM,GAAGR,QAAQ,CAAC;MACtBS,GAAGA,CAAA,EAAG;QACJ,OAAOH,KAAK,CAACI,UAAU;MACzB,CAAC;MACDC,GAAGA,CAACC,GAAG,EAAE;QACPC,IAAI,CAAC,mBAAmB,EAAED,GAAG,CAAC;MAChC;IACF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAGC,MAA8C;IAC3D,MAAMC,WAAW,GAAG;MAClBC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE;IACT,CAAC;IACD,MAAMC,SAAS,GAAGnB,GAAG,CAAC,CAAC;IACvB,MAAMoB,SAAS,GAAGpB,GAAG,CAAC,IAAI,CAAC;IAE3BE,KAAK,CAACK,KAAK,EAAE,MAAOA,KAAK,IAAK;MAC5B,IAAIA,KAAK,CAACI,UAAU,EAAE;QACpBS,SAAS,CAACC,KAAK,GAAG,IAAI;QACtB,MAAMC,eAAe,CAACf,KAAK,CAACgB,QAAQ,CAACC,EAAE,CAAC;QACxCJ,SAAS,CAACC,KAAK,GAAG,KAAK;MACzB;IACF,CAAC,CAAC;;IAEF;AACA;AACA;AACA;IACA,eAAeC,eAAeA,CAACE,EAAE,EAAE;MACjC,MAAMC,IAAI,GAAG,MAAM3B,iBAAiB,CAAC0B,EAAE,CAAC;MACxClB,iBAAiB,CAACe,KAAK,GAAGI,IAAI,CAACC,QAAQ;MACvCrB,QAAQ,CAACgB,KAAK,GAAGI,IAAI,CAACE,IAAI;IAC5B;IACA;AACA;AACA;IACA,eAAeC,YAAYA,CAAA,EAAG;MAC5B,MAAMD,IAAI,GAAGR,SAAS,CAACE,KAAK,CAACQ,cAAc,CAAC,CAAC;MAC7C9B,gBAAgB,CAAC;QAAE+B,MAAM,EAAEvB,KAAK,CAACgB,QAAQ,CAACC,EAAE;QAAEO,gBAAgB,EAAEJ;MAAK,CAAC,CAAC,CAACK,IAAI,CAAC,MAAM;QACjFvB,MAAM,CAACY,KAAK,GAAG,KAAK;QACpBP,IAAI,CAAC,UAAU,CAAC;MAClB,CAAC,CAAC;IACJ;IACA,SAASmB,SAASA,CAAA,EAAG;MACnB5B,QAAQ,CAACgB,KAAK,GAAG,EAAE;MACnBf,iBAAiB,CAACe,KAAK,GAAG,EAAE;IAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}