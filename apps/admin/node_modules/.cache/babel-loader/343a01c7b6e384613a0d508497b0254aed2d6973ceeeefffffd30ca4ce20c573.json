{"ast":null,"code":"import i18n from '@/i18n';\nimport store from '@/store';\nimport { ElMessage } from 'element-plus';\nimport setDocumentTile from '@/utility/set-document-title';\n// 不需要权限的页面\nconst WhiteRoute = ['/login', '/register'];\nexport function useBeforeEach(router) {\n  router.beforeEach(async (to, from, next) => {\n    // 设置文章标题\n    if (to.meta && to.meta.title) {\n      setDocumentTile(to.meta.title, true);\n    }\n    // 不需要权限的页面\n    if (WhiteRoute.includes(to.path)) {\n      // 一般来说,有token，不能再次进入登录页\n      // 但是,有token,而没有任何私有页面权限的用户可以返回登录注册页\n      if (['/login', '/register'].includes(to.path) && store.getters.token) {\n        if (!store.getters.userInfo) {\n          await store.dispatch('user/getUserInfo');\n        }\n        if (store.getters.userInfo.permission.menus.length === 0) {\n          next();\n        } else {\n          next(from.path);\n        }\n      } else {\n        next();\n      }\n      // eslint-disable-next-line brace-style\n    }\n    // 需要需要权限的页面\n    else {\n      // 有token，已经登录过\n      if (store.getters.token) {\n        // 状态仓库中是否有用户信息，\n        // 如果有：代表没有刷新页面|不是重新访问web应用，这时是不需要判断token是否过期的。\n        if (store.getters.userInfo) {\n          next();\n          // eslint-disable-next-line brace-style\n        }\n        // 没有用户信息，代表用户刚刚访问本站\n        else {\n          // 用已有的token去获取用户信息，看token是否过期\n          const ok = await store.dispatch('user/getUserInfo');\n          if (ok) {\n            // 没有过期，放行\n            // 由于在导航守卫中添加了动态路由,所以需要重定向,而不是直接next()\n            next(to.fullPath);\n          } else {\n            // token过期，需要用户重新登录\n            // 先清除token，才能跳转登录页\n            ElMessage.warning(i18n.$t('router.permission.808363-0'));\n            store.commit('user/SET_token', '');\n            next('/login');\n          }\n        }\n        // eslint-disable-next-line brace-style\n      }\n      // 无token,没有登录过,需要让用户登录\n      else {\n        next('/login');\n      }\n    }\n  });\n}","map":{"version":3,"names":["i18n","store","ElMessage","setDocumentTile","WhiteRoute","useBeforeEach","router","beforeEach","to","from","next","meta","title","includes","path","getters","token","userInfo","dispatch","permission","menus","length","ok","fullPath","warning","$t","commit"],"sources":["D:/myproject/毕业设计/pet-mall/apps/admin/src/router/permission.js"],"sourcesContent":["import i18n from '@/i18n'\r\nimport store from '@/store'\r\nimport { ElMessage } from 'element-plus'\r\nimport setDocumentTile from '@/utility/set-document-title'\r\n// 不需要权限的页面\r\nconst WhiteRoute = ['/login', '/register']\r\n\r\nexport function useBeforeEach(router) {\r\n  router.beforeEach(async (to, from, next) => {\r\n    // 设置文章标题\r\n    if (to.meta && to.meta.title) {\r\n      setDocumentTile(to.meta.title, true)\r\n    }\r\n    // 不需要权限的页面\r\n    if (WhiteRoute.includes(to.path)) {\r\n      // 一般来说,有token，不能再次进入登录页\r\n      // 但是,有token,而没有任何私有页面权限的用户可以返回登录注册页\r\n      if (['/login', '/register'].includes(to.path) && store.getters.token) {\r\n        if (!store.getters.userInfo) {\r\n          await store.dispatch('user/getUserInfo')\r\n        }\r\n        if (store.getters.userInfo.permission.menus.length === 0) {\r\n          next()\r\n        } else {\r\n          next(from.path)\r\n        }\r\n      } else {\r\n        next()\r\n      }\r\n      // eslint-disable-next-line brace-style\r\n    }\r\n    // 需要需要权限的页面\r\n    else {\r\n      // 有token，已经登录过\r\n      if (store.getters.token) {\r\n        // 状态仓库中是否有用户信息，\r\n        // 如果有：代表没有刷新页面|不是重新访问web应用，这时是不需要判断token是否过期的。\r\n        if (store.getters.userInfo) {\r\n          next()\r\n          // eslint-disable-next-line brace-style\r\n        }\r\n        // 没有用户信息，代表用户刚刚访问本站\r\n        else {\r\n          // 用已有的token去获取用户信息，看token是否过期\r\n          const ok = await store.dispatch('user/getUserInfo')\r\n\r\n          if (ok) {\r\n            // 没有过期，放行\r\n            // 由于在导航守卫中添加了动态路由,所以需要重定向,而不是直接next()\r\n            next(to.fullPath)\r\n          } else {\r\n            // token过期，需要用户重新登录\r\n            // 先清除token，才能跳转登录页\r\n            ElMessage.warning(i18n.$t('router.permission.808363-0'))\r\n            store.commit('user/SET_token', '')\r\n            next('/login')\r\n          }\r\n        }\r\n        // eslint-disable-next-line brace-style\r\n      }\r\n      // 无token,没有登录过,需要让用户登录\r\n      else {\r\n        next('/login')\r\n      }\r\n    }\r\n  })\r\n}\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D;AACA,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC;AAE1C,OAAO,SAASC,aAAaA,CAACC,MAAM,EAAE;EACpCA,MAAM,CAACC,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAC1C;IACA,IAAIF,EAAE,CAACG,IAAI,IAAIH,EAAE,CAACG,IAAI,CAACC,KAAK,EAAE;MAC5BT,eAAe,CAACK,EAAE,CAACG,IAAI,CAACC,KAAK,EAAE,IAAI,CAAC;IACtC;IACA;IACA,IAAIR,UAAU,CAACS,QAAQ,CAACL,EAAE,CAACM,IAAI,CAAC,EAAE;MAChC;MACA;MACA,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAACD,QAAQ,CAACL,EAAE,CAACM,IAAI,CAAC,IAAIb,KAAK,CAACc,OAAO,CAACC,KAAK,EAAE;QACpE,IAAI,CAACf,KAAK,CAACc,OAAO,CAACE,QAAQ,EAAE;UAC3B,MAAMhB,KAAK,CAACiB,QAAQ,CAAC,kBAAkB,CAAC;QAC1C;QACA,IAAIjB,KAAK,CAACc,OAAO,CAACE,QAAQ,CAACE,UAAU,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;UACxDX,IAAI,CAAC,CAAC;QACR,CAAC,MAAM;UACLA,IAAI,CAACD,IAAI,CAACK,IAAI,CAAC;QACjB;MACF,CAAC,MAAM;QACLJ,IAAI,CAAC,CAAC;MACR;MACA;IACF;IACA;IAAA,KACK;MACH;MACA,IAAIT,KAAK,CAACc,OAAO,CAACC,KAAK,EAAE;QACvB;QACA;QACA,IAAIf,KAAK,CAACc,OAAO,CAACE,QAAQ,EAAE;UAC1BP,IAAI,CAAC,CAAC;UACN;QACF;QACA;QAAA,KACK;UACH;UACA,MAAMY,EAAE,GAAG,MAAMrB,KAAK,CAACiB,QAAQ,CAAC,kBAAkB,CAAC;UAEnD,IAAII,EAAE,EAAE;YACN;YACA;YACAZ,IAAI,CAACF,EAAE,CAACe,QAAQ,CAAC;UACnB,CAAC,MAAM;YACL;YACA;YACArB,SAAS,CAACsB,OAAO,CAACxB,IAAI,CAACyB,EAAE,CAAC,4BAA4B,CAAC,CAAC;YACxDxB,KAAK,CAACyB,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC;YAClChB,IAAI,CAAC,QAAQ,CAAC;UAChB;QACF;QACA;MACF;MACA;MAAA,KACK;QACHA,IAAI,CAAC,QAAQ,CAAC;MAChB;IACF;EACF,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}